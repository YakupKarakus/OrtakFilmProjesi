// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrtakFilmProjesi.Models.Database;

namespace OrtakFilmProjesi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220527073752_deneme2")]
    partial class deneme2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryFilm", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("categoriesId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "categoriesId");

                    b.HasIndex("categoriesId");

                    b.ToTable("CategoryFilm");
                });

            modelBuilder.Entity("FilmSeanslar", b =>
                {
                    b.Property<int>("FilmlerId")
                        .HasColumnType("int");

                    b.Property<int>("seanslarsId")
                        .HasColumnType("int");

                    b.HasKey("FilmlerId", "seanslarsId");

                    b.HasIndex("seanslarsId");

                    b.ToTable("FilmSeanslar");
                });

            modelBuilder.Entity("OrtakFilmProjesi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OrtakFilmProjesi.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("OrtakFilmProjesi.Models.Seanslar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("seans")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Seanslars");
                });

            modelBuilder.Entity("OrtakFilmProjesi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Mail = "admin@hotmail.com",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("CategoryFilm", b =>
                {
                    b.HasOne("OrtakFilmProjesi.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrtakFilmProjesi.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("categoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmSeanslar", b =>
                {
                    b.HasOne("OrtakFilmProjesi.Models.Film", null)
                        .WithMany()
                        .HasForeignKey("FilmlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrtakFilmProjesi.Models.Seanslar", null)
                        .WithMany()
                        .HasForeignKey("seanslarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
